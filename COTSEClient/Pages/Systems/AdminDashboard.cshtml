@page "/DashBoard"
@model COTSEClient.Pages.Systems.AdminDashboardModel
@{
    Layout = "_Layout";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <style>
        .card {
            margin-bottom: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .card-body {
            text-align: center;
        }

        .chart-container {
            margin-top: 20px;

            text-align: center; 

        }

        .custom-select {
            border-radius: 0.375rem; 
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            padding: 0.375rem 1.5rem 0.375rem 0.75rem; 
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23333' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 0.75rem center;
            background-size: 8px 10px;
            cursor: pointer;
        }

    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">

                        <h5 class="card-title">Tổng số người dùng: @Model.TotalUsers</h5>

                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Tổng số hội thảo: @Model.TotalWorkshops</h5>
                    </div>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-4">
                    <div class="input-group">
                        <select id="yearSelect" class="form-select custom-select" onchange="updateChart()">
                            @for (var year = DateTime.Now.Year; year >= 2020; year--)
                            {
                                <option value="@year">@year</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>

        <div class="chart-container">
            <canvas id="workshopsChart"></canvas>
        </div>
    </div>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            function updateChart() {
                var selectedYear = document.getElementById('yearSelect').value;
                fetch('/DashBoard?handler=ChartData&year=' + selectedYear)
                    .then(response => response.json())
                    .then(data => {
                        workshopsChart.data.labels = data.months.split(',').map(month => monthNames[parseInt(month)]);
                        workshopsChart.data.datasets[0].data = data.workshopCounts.split(',').map(count => parseInt(count));
                        workshopsChart.update();
                    });
            }
            var monthNames = ["", "Tháng một", "Tháng hai", "Tháng ba", "Tháng tư", "Tháng năm", "Tháng sáu", "Tháng bảy", "Tháng tám", "Tháng chín", "Tháng mười", "Tháng mười một", "Tháng mười hai"];

            var ctx = document.getElementById('workshopsChart').getContext('2d');
            var workshopsChart;
            function updateChart() {
                var selectedYear = document.getElementById('yearSelect').value;
                fetch('/DashBoard?handler=ChartData&year=' + selectedYear)
                    .then(response => response.json())
                    .then(data => {
                        workshopsChart.data.labels = data.months.split(',').map(month => monthNames[parseInt(month)]);
                        workshopsChart.data.datasets[0].data = data.workshopCounts.split(',').map(count => parseInt(count));
                        workshopsChart.update();
                    });
            }
            fetch('/DashBoard?handler=ChartData&year=' + new Date().getFullYear())
                .then(response => response.json())
                .then(data => {
                    workshopsChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: monthNames.slice(1),
                            datasets: [{
                                label: 'Số lượng hội thảo',
                                data: data.workshopCounts.split(',').map(count => parseInt(count)),
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }
                        }
                    });
                });
        </script>
        }
</body>
</html>
