@page
@model COTSEClient.Pages.Report.TestWorkShopReportModel
@{
    Layout = "_Layout";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Báo cáo hội thảo</title>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
</head>
<body class="d-flex flex-column h-100 bg-light">
    <main class="flex-shrink-0">
        <div class="container px-5 my-5">
            <div class="text-center mb-5">
                <h1 class="display-5 fw-bolder mb-0"><span class="text-gradient d-inline">Report Tests <br> @Model.WorkShopName </span></h1>
            </div>
            <div class="col">
                <div class="card overflow-hidden shadow rounded-4 border-0 h-100">
                    <div class="card-body p-3">
                        @foreach (var InfoTest in Model.InfoTest)
                        {
                            <div class="card-body p-3" style="display: flex; flex-wrap: wrap;">
                                <div style="width:100%;">
                                    <!-- Chia đôi bằng cách đặt chiều rộng của mỗi phần là 50% -->
                                    <h2>Dữ Liệu Bài @InfoTest.TestName </h2>
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th scope="col">TestName</th>
                                                <th scope="col">ParticipantsEmail</th>
                                                <th scope="col">Score</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                double totalScore = 0.0;
                                                var count = 0;
                                            }
                                            @foreach (var item in InfoTest.ParticiPantScores)
                                            {
                                                totalScore += item.Score;
                                                count++;
                                                <tr>
                                                    <td>@item.Test.TestName</td>
                                                    <td>@item.Participant.ParticipantsEmail</td>
                                                    <td>@item.Score</td>
                                                </tr>
                                            }
                                            <tr>
                                                <th scope="col">AverageScore</th>
                                                <th scope="col"></th>
                                                <th scope="col">@(totalScore / count)</th>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

    </main>
    <div class="row gx-5 justify-content-center">
        <canvas id="lineChart"></canvas>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script>
        $(document).ready(function () {
            Chart.register(ChartDataLabels);
            const data = @Html.Raw(Json.Serialize(Model.TestGPAScoreRangeDTO));
            console.log(data);
            let chart;
            // draw chart
            function renderChart(data) {
                var labels = data[0].gpaScoreRange.map(function (item) {
                    return item.scoreRange;
                });
                var datasets = data.map(function (item) {
                    return {
                        label: "GPA " + item.name,
                        data: item.gpaScoreRange.map(function (range) {
                            return range.count;
                        }),
                        fill: false,
                        borderColor: getRandomColor(),
                        tension: 0,
                        pointStyle: 'rect',
                        pointRadius: 15,
                        pointHoverRadius: 15
                    };
                });
                console.log(datasets);
                console.log(labels);
                var ctx = document.getElementById('lineChart').getContext('2d');
                chart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: datasets,

                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Score Range',
                                    type: 'log2',
                                    font: {
                                        size: 20,
                                        weight: 'bold'
                                    }
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Score Range',
                                    font: {
                                        size: 20,
                                        weight: 'bold'
                                    }
                                },
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: 'GPA Pre and Post',
                                font: {
                                    weight: 'bold',
                                    size: 25
                                }
                            },
                            datalabels: {
                                anchor: 'end',
                                align: 'end',
                                font: {
                                    weight: 'bold',
                                    size: 16
                                }
                            },
                        },
                    }
                });
            }

            // printf chart
            renderChart(data);

            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }
        });
    </script>
</body>
</html>